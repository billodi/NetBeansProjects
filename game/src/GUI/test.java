package GUI;

import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author Buddika Alwis
 */
public class test extends javax.swing.JFrame {

    static boolean idle = true;
    static boolean b = false;
    static boolean stop = false;
    static int hi = 200;
    static int wi = 100;

    /**
     * Creates new form test
     */
    public test() {

        initComponents();
        jPanel1.setLayout(null);
        this.setExtendedState(MAXIMIZED_BOTH);
        

        jLabel1.requestFocus();
        idle(jLabel1);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setOpaque(false);
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel1.setOpaque(true);
        jLabel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel1KeyPressed(evt);
            }

            public void keyReleased(java.awt.event.KeyEvent evt) {
                jLabel1KeyReleased(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(hi, wi, 200, 160));

        pack();
    }// </editor-fold>                        

    private void jLabel1KeyPressed(java.awt.event.KeyEvent evt) {
        //37
        //    39
//38
//40

        String left = "37";
        String right = "39";
        String up = "38";
        String down = "40";
        if (!b) {
            if (String.valueOf(evt.getKeyChar()).equals("h")) {

                b = true;

                animation(jLabel1, "Attack", 140);

            }
            if (String.valueOf(evt.getKeyChar()).equals("j")) {
                b = true;

                animation(jLabel1, "Jump", 112);
            }
        }
        if (String.valueOf(evt.getKeyCode()).equals("39")) {
            b = true;
            stop = false;
            running(jLabel1, right);
            

        }
    }

    private void jLabel1KeyReleased(java.awt.event.KeyEvent evt) {
        String left = "37";
        String right = "39";
        String up = "38";
        String down = "40";

        if (String.valueOf(evt.getKeyCode()).equals("39")) {
            stop = true;
            idle(jLabel1);
            b = false;
            
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new test().setVisible(true);

            }
        });
    }

    public static void idle(JLabel j) {

        Thread t = new Thread() {
            public void run() {
                int i = 0;
                try {
                    if (this.isAlive()) {
                        idle = true;

                    }
                    j.setLocation(hi, wi);
                    while (true) {
                        if (b) {
                            idle = false;
                            break;
                        }
                        

                        ImageIcon icon = new ImageIcon("src/resources/Idle__00" + String.valueOf(i) + ".png");
                        Image image = icon.getImage();
                        Image newimg = image.getScaledInstance(80, 160, Image.SCALE_SMOOTH);

                        icon = new ImageIcon(newimg);
                        j.setLocation(hi, wi);
                        j.setIcon(icon);

                        i = i + 1;
                        if (i > 9) {
                            i = 0;
                        }
                        Thread.sleep(80);

                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        };
        t.start();

    }

    public static void animation(JLabel j, String action, int wide) {
        Thread t = new Thread() {
            public void run() {

                int i = 0;

                int incre = 10;
                try {
                    if (this.isAlive()) {

                    }
                    while (i < 10) {
                        ImageIcon icon = new ImageIcon("src/resources/" + action + "__00" + String.valueOf(i) + ".png");
                        Image image = icon.getImage();
                        Image newimg = image.getScaledInstance(wide, 160, Image.SCALE_SMOOTH);
                        icon = new ImageIcon(newimg);
                        j.setIcon(icon);
                        j.setLocation(hi, wi);
                        i = i + 1;

                        if (action.equals("Jump")) {
                            if (i < 6) {
                                j.setLocation(j.getX(), j.getY() - incre);
                                j.setLocation(hi, wi);

                            } else {
                                j.setLocation(j.getX(), j.getY() + incre);
                            }
                        }
                        if (action.equals("Attack")) {
                            j.setLocation(j.getX(), wi + 15);

                        }
                        Thread.sleep(80);

                    }
                    b = false;
                    if (!idle) {
                        test.idle(j);
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        };
        t.start();
    }

    public static void running(JLabel j, String direction) {

        Thread t = new Thread() {
            public void run() {
                int i = 0;
                try {

                    while (true) {
                        if (stop) {

                            break;
                        }
                        if (direction.equals("39")) {
                            j.setLocation(hi, wi);
                            j.setLocation(j.getX() + 10, j.getY());
                            hi = j.getX();
                            wi = j.getY();

                        }

                        ImageIcon icon = new ImageIcon("src/resources/Run__00" + String.valueOf(i) + ".png");
                        Image image = icon.getImage();
                        Image newimg = image.getScaledInstance(110, 160, Image.SCALE_SMOOTH);
                        icon = new ImageIcon(newimg);
                        j.setIcon(icon);
                        j.setLocation(hi, wi);

                        i = i + 1;
                        if (i > 9) {
                            i = 0;
                        }

                        Thread.sleep(80);

                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        };
        t.start();

    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration                   
}
